geom_bar(stat = "identity", position = dodge)
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
geom_errorbar(limits, position = dodge, width = 0.25)
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p + geom_bar(stat = "identity", position = dodge) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p
p <- ggplot(data = myData, aes(x = field, y = x.Mean, fill = field))
p
p <- ggplot(data = myData, aes_string(x = field, y = x.Mean, fill = field))
field = "gender"
myData = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) });
#row.names(myData) <- myData[,1];
#myData <- subset(myData, select = -field );
myData;
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = myData$x.Mean + myData$x.se,
ymin = myData$x.Mean - myData$x.se)
p <- ggplot(data = myData, aes(x = field, y = x.Mean, fill = field))
p + geom_bar(stat = "identity", position = dodge) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p <- ggplot(data = myData, aes(x = field, y = field, fill = field))
p
p <- ggplot(data = myData, aes(x = field, y = "x.Mean", fill = field))
p
p <- ggplot(data = myData, aes(x = "field", y = "x.Mean", fill = "field"))
p
View(myData)
View(safety_data)
View(myData)
View(myData)
field = "gender"
myData = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) });
#row.names(myData) <- myData[,1];
#myData <- subset(myData, select = -field );
myData;
View(myData)
myData;
View(myData)
myData = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) }).plot();
myData = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) }).plot;
myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
install.packages("epiDisplay", dependencies = TRUE);
myData = aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci");
library(epiDisplay);
myData = aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci");
myData = aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
myData = aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
myData;
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
library(epiDisplay);
library(plotly);
library(NISTunits);
library(reshape2);
library(ggplot2);
library(data.table);
# loading file
safety_data = read.csv("safety_data.csv");
# Removing rows with no safety perception measurement
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
safety_data = completeFun(safety_data, "pointsecurity")
# Based on
# https://stackoverflow.com/a/365853/3128369
haversine <- function(data, lat1, lon1, lat2, lon2){
earthRadiusKm = 6371;
dLat = NISTdegTOradian(data[[lat2]]-data[[lat1]]);
dLon = NISTdegTOradian(data[[lon2]]-data[[lon1]]);
lat1 = NISTdegTOradian(data[[lat1]]);
lat2 = NISTdegTOradian(data[[lat2]]);
a = sin(dLat/2) * sin(dLat/2) +
sin(dLon/2) * sin(dLon/2) * cos(lat1) * cos(lat2);
c = 2 * atan2(sqrt(a), sqrt(1-a));
distance = earthRadiusKm * c;
return (distance);
}
safety_data[["haversine"]] = haversine(safety_data, "cetram_lat", "cetram_long", "latitude", "longitude");
ste <- function(x) sd(x)/sqrt(length(x))
field = "gender"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
library(epiDisplay);
library(plotly);
library(NISTunits);
library(reshape2);
library(ggplot2);
library(data.table);
# loading file
safety_data = read.csv("safety_data.csv");
# Removing rows with no safety perception measurement
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
safety_data = completeFun(safety_data, "pointsecurity")
# Based on
# https://stackoverflow.com/a/365853/3128369
haversine <- function(data, lat1, lon1, lat2, lon2){
earthRadiusKm = 6371;
dLat = NISTdegTOradian(data[[lat2]]-data[[lat1]]);
dLon = NISTdegTOradian(data[[lon2]]-data[[lon1]]);
lat1 = NISTdegTOradian(data[[lat1]]);
lat2 = NISTdegTOradian(data[[lat2]]);
a = sin(dLat/2) * sin(dLat/2) +
sin(dLon/2) * sin(dLon/2) * cos(lat1) * cos(lat2);
c = 2 * atan2(sqrt(a), sqrt(1-a));
distance = earthRadiusKm * c;
return (distance);
}
safety_data[["haversine"]] = haversine(safety_data, "cetram_lat", "cetram_long", "latitude", "longitude");
ste <- function(x) sd(x)/sqrt(length(x))
field = "age"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
#row.names(myData) <- myData[,1];
#myData <- subset(myData, select = -field );
library(epiDisplay);
library(plotly);
library(NISTunits);
library(reshape2);
library(ggplot2);
library(data.table);
# loading file
safety_data = read.csv("safety_data.csv");
# Removing rows with no safety perception measurement
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
safety_data = completeFun(safety_data, "pointsecurity")
# Based on
# https://stackoverflow.com/a/365853/3128369
haversine <- function(data, lat1, lon1, lat2, lon2){
earthRadiusKm = 6371;
dLat = NISTdegTOradian(data[[lat2]]-data[[lat1]]);
dLon = NISTdegTOradian(data[[lon2]]-data[[lon1]]);
lat1 = NISTdegTOradian(data[[lat1]]);
lat2 = NISTdegTOradian(data[[lat2]]);
a = sin(dLat/2) * sin(dLat/2) +
sin(dLon/2) * sin(dLon/2) * cos(lat1) * cos(lat2);
c = 2 * atan2(sqrt(a), sqrt(1-a));
distance = earthRadiusKm * c;
return (distance);
}
safety_data[["haversine"]] = haversine(safety_data, "cetram_lat", "cetram_long", "latitude", "longitude");
ste <- function(x) sd(x)/sqrt(length(x))
field = "modesecurity"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
field = "educational_attainment"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main = "auto");
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main = "auto");
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]),
error="ci",  legend = "none", main = "safety perception vs " + field);
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]),
error="ci",  legend = "none", main = "safety perception vs " + field);
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]),
error="ci",  legend = "none");
aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
library(epiDisplay);
library(plotly);
library(NISTunits);
library(reshape2);
library(ggplot2);
library(data.table);
# loading file
safety_data = read.csv("safety_data.csv");
# Removing rows with no safety perception measurement
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
safety_data = completeFun(safety_data, "pointsecurity")
# Based on
# https://stackoverflow.com/a/365853/3128369
haversine <- function(data, lat1, lon1, lat2, lon2){
earthRadiusKm = 6371;
dLat = NISTdegTOradian(data[[lat2]]-data[[lat1]]);
dLon = NISTdegTOradian(data[[lon2]]-data[[lon1]]);
lat1 = NISTdegTOradian(data[[lat1]]);
lat2 = NISTdegTOradian(data[[lat2]]);
a = sin(dLat/2) * sin(dLat/2) +
sin(dLon/2) * sin(dLon/2) * cos(lat1) * cos(lat2);
c = 2 * atan2(sqrt(a), sqrt(1-a));
distance = earthRadiusKm * c;
return (distance);
}
safety_data[["haversine"]] = haversine(safety_data, "cetram_lat", "cetram_long", "latitude", "longitude");
ste <- function(x) sd(x)/sqrt(length(x))
field = "gender"
main = "safety perception vs " + field;
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none");
#row.names(myData) <- myData[,1];
#myData <- subset(myData, select = -field );
field = "gender"
title = "safety perception vs " + field;
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main="Effect of age and salt adding on SBP", xlab="years",ylab="mm.Hg")
library(epiDisplay);
library(plotly);
library(NISTunits);
library(reshape2);
library(ggplot2);
library(data.table);
# loading file
safety_data = read.csv("safety_data.csv");
# Removing rows with no safety perception measurement
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
safety_data = completeFun(safety_data, "pointsecurity")
# Based on
# https://stackoverflow.com/a/365853/3128369
haversine <- function(data, lat1, lon1, lat2, lon2){
earthRadiusKm = 6371;
dLat = NISTdegTOradian(data[[lat2]]-data[[lat1]]);
dLon = NISTdegTOradian(data[[lon2]]-data[[lon1]]);
lat1 = NISTdegTOradian(data[[lat1]]);
lat2 = NISTdegTOradian(data[[lat2]]);
a = sin(dLat/2) * sin(dLat/2) +
sin(dLon/2) * sin(dLon/2) * cos(lat1) * cos(lat2);
c = 2 * atan2(sqrt(a), sqrt(1-a));
distance = earthRadiusKm * c;
return (distance);
}
safety_data[["haversine"]] = haversine(safety_data, "cetram_lat", "cetram_long", "latitude", "longitude");
ste <- function(x) sd(x)/sqrt(length(x))
#attach(.data);
field = "gender"
title = "safety perception vs " + field;
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=title, xlab=field)
title(main=title, xlab="years")
title(main=title, xlab="years",ylab="mm.Hg")
title(main=sprintf(title), xlab="years",ylab="mm.Hg")
title(main=sprintf("%s", title), xlab="years",ylab="mm.Hg")
title(main=sprintf("safety perception vs %s", field), xlab="years",ylab="mm.Hg")
library(epiDisplay);
library(plotly);
library(NISTunits);
library(reshape2);
library(ggplot2);
library(data.table);
# loading file
safety_data = read.csv("safety_data.csv");
# Removing rows with no safety perception measurement
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
safety_data = completeFun(safety_data, "pointsecurity")
# Based on
# https://stackoverflow.com/a/365853/3128369
haversine <- function(data, lat1, lon1, lat2, lon2){
earthRadiusKm = 6371;
dLat = NISTdegTOradian(data[[lat2]]-data[[lat1]]);
dLon = NISTdegTOradian(data[[lon2]]-data[[lon1]]);
lat1 = NISTdegTOradian(data[[lat1]]);
lat2 = NISTdegTOradian(data[[lat2]]);
a = sin(dLat/2) * sin(dLat/2) +
sin(dLon/2) * sin(dLon/2) * cos(lat1) * cos(lat2);
c = 2 * atan2(sqrt(a), sqrt(1-a));
distance = earthRadiusKm * c;
return (distance);
}
safety_data[["haversine"]] = haversine(safety_data, "cetram_lat", "cetram_long", "latitude", "longitude");
ste <- function(x) sd(x)/sqrt(length(x))
#attach(.data);
field = "gender"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
#attach(.data);
field = "age"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "modesecurity"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "bus_or_ped"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "base_study_zone"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "base_study_zone"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title, xmax=5);
title(main=sprintf("safety perception vs %s", field))
field = "base_study_zone"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title, xlab=5);
title(main=sprintf("safety perception vs %s", field))
field = "base_study_zone"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title, xlab="auto");
title(main=sprintf("safety perception vs %s", field))
field = "busdestination"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "inside_or_outside"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "total_seats"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "total_seats"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "companions"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "educational_attainment"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "origin"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "destination"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "destination"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
field = "destinations"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "trip_purpose"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "Importance_safety_digit"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "mostsafe"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "leastsafe"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "urban.typology"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "haversine"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "hour"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title, cap.size = 2);
field = "hour"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "wday"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
field = "wday"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
#attach(.data);
field = "gender"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
#attach(.data);
field = "wday"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
library(epiDisplay);
library(plotly);
library(NISTunits);
library(reshape2);
library(ggplot2);
library(data.table);
# loading file
safety_data = read.csv("safety_data.csv");
# Removing rows with no safety perception measurement
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
safety_data = completeFun(safety_data, "pointsecurity")
# Based on
# https://stackoverflow.com/a/365853/3128369
haversine <- function(data, lat1, lon1, lat2, lon2){
earthRadiusKm = 6371;
dLat = NISTdegTOradian(data[[lat2]]-data[[lat1]]);
dLon = NISTdegTOradian(data[[lon2]]-data[[lon1]]);
lat1 = NISTdegTOradian(data[[lat1]]);
lat2 = NISTdegTOradian(data[[lat2]]);
a = sin(dLat/2) * sin(dLat/2) +
sin(dLon/2) * sin(dLon/2) * cos(lat1) * cos(lat2);
c = 2 * atan2(sqrt(a), sqrt(1-a));
distance = earthRadiusKm * c;
return (distance);
}
safety_data[["haversine"]] = haversine(safety_data, "cetram_lat", "cetram_long", "latitude", "longitude");
ste <- function(x) sd(x)/sqrt(length(x))
#attach(.data);
field = "base_study_location"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
library(epiDisplay);
library(plotly);
library(NISTunits);
library(reshape2);
library(ggplot2);
library(data.table);
# loading file
safety_data = read.csv("safety_data.csv");
# Removing rows with no safety perception measurement
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
safety_data = completeFun(safety_data, "pointsecurity")
# Based on
# https://stackoverflow.com/a/365853/3128369
haversine <- function(data, lat1, lon1, lat2, lon2){
earthRadiusKm = 6371;
dLat = NISTdegTOradian(data[[lat2]]-data[[lat1]]);
dLon = NISTdegTOradian(data[[lon2]]-data[[lon1]]);
lat1 = NISTdegTOradian(data[[lat1]]);
lat2 = NISTdegTOradian(data[[lat2]]);
a = sin(dLat/2) * sin(dLat/2) +
sin(dLon/2) * sin(dLon/2) * cos(lat1) * cos(lat2);
c = 2 * atan2(sqrt(a), sqrt(1-a));
distance = earthRadiusKm * c;
return (distance);
}
safety_data[["haversine"]] = haversine(safety_data, "cetram_lat", "cetram_long", "latitude", "longitude");
ste <- function(x) sd(x)/sqrt(length(x))
#attach(.data);
field = "base_study_zone"
#myData = aggregate.plot(safety_data[["pointsecurity"]], list(field = safety_data[[field]]),  function(x){ c(Mean=mean(x), se=ste(x)) })
x=aggregate.plot(x=safety_data[["pointsecurity"]], by=list(field = safety_data[[field]]), error="ci",  legend = "none", main=title);
title(main=sprintf("safety perception vs %s", field))
num = aggregate(safety_data[["pointsecurity"]], list(field = safety_data[[field]]), length)
num;
